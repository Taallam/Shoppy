import type { NextPage } from "next";
import Head from "next/head";
import { HomeHeader } from "../components/Header/Header";
import { Product } from "../components/Product";
import styled from "@emotion/styled";
import { useState, useEffect } from "react";
import AdvancedFilters from "../components/AdvancedFilters";
import Link from "next/link";

const Home: NextPage = () => {
  const [searchTerm, setSearchTerm] = useState("");
  const [listOfProducts, setListOfProducts] = useState([])
  const [products, setProducts] = useState([]);
  const [advancedFiltersVisibility, setAdvancedFiltersVisibility] = useState(false);
  const [filterPriceFrom, setFilterPriceFrom] = useState("");
  const [filterPriceTo, setFilterPriceTo] = useState("");

  useEffect(() => {
    // The code here will run only ONCE
    fetch("http://localhost:3000/api/products")
      .then(result => result.json())
      .then(jsonData => setListOfProducts(jsonData))
  }, [])

  useEffect(() => {
    const newProducts = listOfProducts.filter((product) => product.productName.toLowerCase().includes(searchTerm.toLowerCase()));
    setProducts(newProducts);
  }, [searchTerm, listOfProducts]);

  useEffect(() => {
    const newProducts = listOfProducts.filter((product) => {
      // If both filters are empty, returns true -> show the product
      const productPrice = parseInt(product.productPrice.slice(1));
      const priceTo = parseInt(filterPriceTo);
      const priceFrom = parseInt(filterPriceFrom);

      if (filterPriceFrom === "" && filterPriceTo === "") {
        return true;
      } else if (filterPriceFrom === "") {
        return productPrice <= priceTo;
      } else if (filterPriceTo === "") {
        return priceFrom <= productPrice;
      } else {
        return priceFrom <= productPrice && productPrice <= priceTo;
      }
    });

    setProducts(newProducts);
  }, [filterPriceFrom, filterPriceTo, listOfProducts]);

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <HomeHeader shouldFilter={true} shouldSearch={true} searchTerm={searchTerm} setSearchTerm={setSearchTerm} setAdvancedFiltersVisibility={setAdvancedFiltersVisibility} />
      <IndexContents>
        <ProductsContainer>
          {products.map((product) => (
            <Product key={product.id} id={product.id} productPrice={product.productPrice} productName={product.productName} productImage={product.productImage}>
              {product.productDescription}
            </Product>
          ))}
        </ProductsContainer>
        <AdvancedFilters
          visible={advancedFiltersVisibility}
          setAdvancedFiltersVisibility={setAdvancedFiltersVisibility}
          priceFrom={filterPriceFrom}
          priceTo={filterPriceTo}
          setPriceFrom={setFilterPriceFrom}
          setPriceTo={setFilterPriceTo}
        />
      </IndexContents>
    </div>
  );
};

const ProductsContainer = styled.div`
  display: flex;
  flex-wrap: wrap;
`;

const IndexContents = styled.div`
  display: grid;
  grid-template-columns: 1fr 320px;
`;

export default Home;
